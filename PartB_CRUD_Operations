import java.sql.*;
 import java.util.Scanner;
 public class ProductCRUD {
    static String url = "jdbc:mysql://localhost:3306/companydb";
    static String user = "root";
    static String password = "password";
    public static void main(String[] args) {
        try (Connection con = DriverManager.getConnection(url, user, password)) {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Scanner sc = new Scanner(System.in);
            int choice;
            do {
                System.out.println("\n==== PRODUCT MANAGEMENT SYSTEM ====");
                System.out.println("1. Add Product");
                System.out.println("2. View Products");
                System.out.println("3. Update Product");
                System.out.println("4. Delete Product");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
                choice = sc.nextInt();
                switch (choice) {
                    case 1:
                        addProduct(con, sc);
                        break;
                    case 2:
                        viewProducts(con);
                        break;
                    case 3:
                        updateProduct(con, sc);
                        break;
                    case 4:
                        deleteProduct(con, sc);
                        break;
                    case 5:
                        System.out.println("Exiting...");
                        break;
                    default:
                        System.out.println("Invalid choice!");
                }
            } while (choice != 5);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    static void addProduct(Connection con, Scanner sc) throws SQLException {
        System.out.print("Enter Product Name: ");
        String name = sc.next();
        System.out.print("Enter Price: ");
        double price = sc.nextDouble();
        System.out.print("Enter Quantity: ");
        int qty = sc.nextInt();
        String sql = "INSERT INTO Product(ProductName, Price, Quantity) VALUES (?, ?, ?)";
        con.setAutoCommit(false);
        try (PreparedStatement pst = con.prepareStatement(sql)) {
            pst.setString(1, name);
            pst.setDouble(2, price);
            pst.setInt(3, qty);
            pst.executeUpdate();
            con.commit();
            System.out.println("Product added successfully!");
        } catch (SQLException e) {
            con.rollback();
            System.out.println("Error occurred. Transaction rolled back.");
        }
    }
    static void viewProducts(Connection con) throws SQLException {
        String sql = "SELECT * FROM Product";
        try (Statement stmt = con.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            System.out.println("ID\tName\tPrice\tQuantity");
            while (rs.next()) {
                System.out.printf("%d\t%s\t%.2f\t%d\n",
                        rs.getInt("ProductID"),
                        rs.getString("ProductName"),
                        rs.getDouble("Price"),
                        rs.getInt("Quantity"));
            }
        }
    }
    static void updateProduct(Connection con, Scanner sc) throws SQLException {
        System.out.print("Enter Product ID to update: ");
        int id = sc.nextInt();
        System.out.print("Enter new price: ");
        double price = sc.nextDouble();
        String sql = "UPDATE Product SET Price=? WHERE ProductID=?";
        con.setAutoCommit(false);
        try (PreparedStatement pst = con.prepareStatement(sql)) {
            pst.setDouble(1, price);
            pst.setInt(2, id);
            pst.executeUpdate();
            con.commit();
            System.out.println("Product updated successfully!");
        } catch (SQLException e) {
            con.rollback();
            System.out.println("Update failed. Rolled back.");
        }
    }
    static void deleteProduct(Connection con, Scanner sc) throws SQLException {
        System.out.print("Enter Product ID to delete: ");
        int id = sc.nextInt();
        String sql = "DELETE FROM Product WHERE ProductID=?";
        con.setAutoCommit(false);
        try (PreparedStatement pst = con.prepareStatement(sql)) {
            pst.setInt(1, id);
            pst.executeUpdate();
            con.commit();
            System.out.println("Product deleted successfully!");
        } catch (SQLException e) {
            con.rollback();
            System.out.println("Delete failed. Rolled back.");
        }
    }
 }
