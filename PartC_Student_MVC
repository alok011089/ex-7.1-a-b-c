// Model: Student.java
 package model;
 public class Student {
    private int studentID;
    private String name;
    private String department;
    private double marks;
    public Student(int studentID, String name, String department, double marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }
    public Student(String name, String department, double marks) {
        this.name = name;
        this.department = department;
        this.marks = marks;
    }
    public int getStudentID() { return studentID; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public double getMarks() { return marks; }
 }
 // Controller: StudentDAO.java
 package controller;
 import model.Student;
 import java.sql.*;
 import java.util.*;
 public class StudentDAO {
    private Connection con;
    public StudentDAO() throws SQLException, ClassNotFoundException {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/schooldb", "root", "password");
    }
    public void addStudent(Student s) throws SQLException {
        String sql = "INSERT INTO Student(Name, Department, Marks) VALUES (?, ?, ?)";
        try (PreparedStatement pst = con.prepareStatement(sql)) {
            pst.setString(1, s.getName());
            pst.setString(2, s.getDepartment());
            pst.setDouble(3, s.getMarks());
            pst.executeUpdate();
            System.out.println("Student added!");
        }
    }
    public List<Student> getAllStudents() throws SQLException {
        List<Student> list = new ArrayList<>();
        String sql = "SELECT * FROM Student";
        try (Statement st = con.createStatement(); ResultSet rs = st.executeQuery(sql)) {
            while (rs.next()) {
                list.add(new Student(
                    rs.getInt("StudentID"),
                    rs.getString("Name"),
                    rs.getString("Department"),
                    rs.getDouble("Marks")
                ));
            }
        }
        return list;
    }
    public void updateStudent(int id, double marks) throws SQLException {
        String sql = "UPDATE Student SET Marks=? WHERE StudentID=?";
        try (PreparedStatement pst = con.prepareStatement(sql)) {
            pst.setDouble(1, marks);
            pst.setInt(2, id);
            pst.executeUpdate();
            System.out.println("Student updated!");
        }
    }
    public void deleteStudent(int id) throws SQLException {
        String sql = "DELETE FROM Student WHERE StudentID=?";
        try (PreparedStatement pst = con.prepareStatement(sql)) {
            pst.setInt(1, id);
            pst.executeUpdate();
            System.out.println("Student deleted!");
        }
    }
 }
 // View: StudentApp.java
 package view;
 import controller.StudentDAO;
 import model.Student;
 import java.util.*;
 public class StudentApp {
    public static void main(String[] args) {
        try {
            StudentDAO dao = new StudentDAO();
            Scanner sc = new Scanner(System.in);
            int choice;
            do {
                System.out.println("\n=== STUDENT MANAGEMENT SYSTEM ===");
                System.out.println("1. Add Student");
                System.out.println("2. View All Students");
                System.out.println("3. Update Student Marks");
                System.out.println("4. Delete Student");
                System.out.println("5. Exit");
                System.out.print("Enter choice: ");
                choice = sc.nextInt();
                switch (choice) {
                    case 1:
                        System.out.print("Name: ");
                        String name = sc.next();
                        System.out.print("Department: ");
                        String dept = sc.next();
                        System.out.print("Marks: ");
                        double marks = sc.nextDouble();
                        dao.addStudent(new Student(name, dept, marks));
                        break;
                    case 2:
                        List<Student> list = dao.getAllStudents();
                        System.out.println("ID\tName\tDept\tMarks");
                        for (Student s : list)
                            System.out.println(s.getStudentID() + "\t" + s.getName() + "\t" + s.getDepartment() + "\t" + s.getMarks());
                        break;
                    case 3:
                        System.out.print("Enter Student ID: ");
                        int sid = sc.nextInt();
                        System.out.print("Enter new Marks: ");
                        double newMarks = sc.nextDouble();
                        dao.updateStudent(sid, newMarks);
                        break;
                    case 4:
                        System.out.print("Enter Student ID to delete: ");
                        int delID = sc.nextInt();
                        dao.deleteStudent(delID);
                        break;
                    case 5:
                        System.out.println("Exiting...");
                        break;
                    default:
                        System.out.println("Invalid choice!");
                }
            } while (choice != 5);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
 }
